# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
machine:
  ruby:
    version: 2.4.2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.4.1-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.6

    working_directory: ~/blogit

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!... also creates coverage report
      - run:
          name: Run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            -- \
                            $TEST_FILES

      - run:
          name: Create style guide report
          command: REPORTS_DIR=/tmp/reports rails edo:report:style

      - run:
          name: Create code climate report
          command: REPORTS_DIR=/tmp/reports rails edo:report:climate

      - run:
          name: Create code security report
          command: REPORTS_DIR=/tmp/reports rails edo:report:security

      # # Removed this because it's taking too long to run on CircleCI
      # - run:
      #     name: Create code quality report
      #     command: REPORTS_DIR=tmp/reports rails edo:report:quality

      # collect reports
      - store_test_results:
          path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - store_artifacts:
          path: /tmp/reports
          destination: reports

      - store_artifacts:
          path: ./coverage
          destination: reports

      # collect reports
      - store_test_results:
          path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
